[tool.poetry]
name = "roubo-de-renda-calc"
version = "0.2.0"
description = ""
authors = ["Paulo Moggi <paulohpmoggi@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.11"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
isort = "^5.12.0"
ipython = "^8.15.0"
pytest = "^7.4.1"
safety = "^2.3.5"
radon = "^6.0.1"
coverage = "^7.3.0"
bandit = "^1.7.5"
pytest-cov = "^4.1.0"
ruff = "^0.0.287"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
line-length = 119
select = [
  "E",   # pycodestyle
  "W",   # pycodestyle
  "F",   # pyflakes
  "C90",   # mccabe
  "N",   # pep8-naming
  "UP",  # pyupgrade
  "D",   # pydocstyle
  "S",   # flake8-bandit
  "PL",   # Pylint
]
ignore = ["E203", "E501", "E712", "D100", "D401"]
exclude = ["var", "tests"]

[tool.ruff.per-file-ignores]
"*/__init__.py" = ["D104"]

[tool.ruff.mccabe]
max-complexity = 5

[tool.isort]
profile = "black"
src_paths = ["app"]

[tool.black]
multi_line_output = 3
include_trailing_comma = true
use_parentheses = true
ensure_newline_before_comments = true
line_length = 119

[tool.pylint.'MESSAGES CONTROL']
# confidence = "HIGH,CONTROL_FLOW,INFERENCE_FAILURE"
disable = ["missing-module-docstring", "line-too-long"]

[tool.pytest.ini_options]
addopts = ["--doctest-modules", "--disable-warnings"]
testpaths = ["app"]
